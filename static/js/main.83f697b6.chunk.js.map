{"version":3,"sources":["logo2.svg","Signup.js","App.js","reportWebVitals.js","setupFirebase.js","index.js"],"names":["configUI","signInFlow","signInSuccessUrl","signInOptions","firebase","auth","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","signOut","then","console","log","catch","Signup","useState","user","setUser","useEffect","onAuthStateChanged","displayName","email","onClick","uiConfig","firebaseAuth","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAe,G,MAAA,IAA0B,mC,gDCIrCA,EAAW,CACXC,WAAY,QACZC,iBAAkB,IAClBC,cAAe,CACXC,IAASC,KAAKC,kBAAkBC,YAChCH,IAASC,KAAKG,mBAAmBD,aAErCE,UAAW,CACPC,4BAA6B,WACzB,OAAO,KAKbC,EAAU,WACZP,IAASC,OAAOM,UAAUC,MAAK,WAC3BC,QAAQC,IAAI,gCACbC,OAAM,WACLF,QAAQC,IAAI,kCAgCLE,EA5BA,WACX,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OAPAC,qBAAU,WAIN,OAHqBhB,IAASC,OAAOgB,oBAAmB,SAACH,GACrDC,EAAQD,SAKbA,EAEK,mCACI,0CACcA,EAAKI,YADnB,IACgC,uBAC5B,gCAAQJ,EAAKK,QAAc,uBAC3B,wBAAQC,QAASb,EAAjB,0BAMZ,mCACA,cAAC,IAAD,CAAmBc,SAAUzB,EAAU0B,aAActB,IAASC,YC7BvDsB,MAff,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,6CAGA,cAAC,EAAD,UCAOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,yBCSZ7B,IAASoC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCNnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.83f697b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo2.71b697a9.svg\";","import React, {useState, useEffect} from 'react';\r\nimport firebase from 'firebase';\r\nimport StylefirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n\r\nvar configUI = {\r\n    signInFlow: 'popup',\r\n    signInSuccessUrl: '/',\r\n    signInOptions: [\r\n        firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n        signInSuccessWithAuthResult: () => {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst signOut = () => {\r\n    firebase.auth().signOut().then(function(){\r\n        console.log('Cierre de sesion exitoso!');\r\n    }).catch(function(){\r\n        console.log('Error en cierre de sesion!');\r\n    })\r\n}\r\n\r\nconst Signup = () => {\r\n    const [user, setUser] = useState(null);\r\n    useEffect(() => {\r\n        const authObserver = firebase.auth().onAuthStateChanged((user) =>  {\r\n            setUser(user);\r\n        });\r\n        return authObserver;\r\n    });\r\n    \r\n    if(user){\r\n        return(\r\n            <>\r\n                <p>\r\n                    Welcome, {user.displayName} <br/>\r\n                    <small>{user.email}</small><br/>\r\n                    <button onClick={signOut}>Log Out</button>\r\n                </p>\r\n            </>\r\n        )\r\n    } else {\r\n    return (\r\n        <>\r\n        <StylefirebaseAuth uiConfig={configUI} firebaseAuth={firebase.auth()} />\r\n        </>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Signup","import logo from './logo2.svg';\nimport './App.css';\nimport Signup from './Signup';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n         Alert Your's\n        </p>\n        <Signup />\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//import * as firebase from 'firebase';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/analytics';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB5KVHp2CNBSfWgo_3tC31pW6bxKdUyePY\",\r\n    authDomain: \"alert-yours.firebaseapp.com\",\r\n    projectId: \"alert-yours\",\r\n    storageBucket: \"alert-yours.appspot.com\",\r\n    messagingSenderId: \"266859928779\",\r\n    appId: \"1:266859928779:web:9cfc604839ec89f9968f4e\",\r\n    measurementId: \"G-F7TXY3J3TR\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './setupFirebase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}